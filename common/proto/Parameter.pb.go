// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: common/proto/Parameter.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalName        string                    `protobuf:"bytes,1,opt,name=internal_name,json=internalName,proto3" json:"internal_name,omitempty"`
	Description         string                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ShortDescription    string                    `protobuf:"bytes,3,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	Color               string                    `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	GoodValueRange      *Parameter_GoodValueRange `protobuf:"bytes,5,opt,name=good_value_range,json=goodValueRange,proto3" json:"good_value_range,omitempty"`
	Measurement         *Parameter_Measurement    `protobuf:"bytes,6,opt,name=measurement,proto3" json:"measurement,omitempty"`
	WithinTolerance     bool                      `protobuf:"varint,7,opt,name=within_tolerance,json=withinTolerance,proto3" json:"within_tolerance,omitempty"`
	WithinWarningLimits bool                      `protobuf:"varint,8,opt,name=within_warning_limits,json=withinWarningLimits,proto3" json:"within_warning_limits,omitempty"`
	PixelPerUnit        float64                   `protobuf:"fixed64,9,opt,name=pixel_per_unit,json=pixelPerUnit,proto3" json:"pixel_per_unit,omitempty"`
	CanEject            bool                      `protobuf:"varint,10,opt,name=can_eject,json=canEject,proto3" json:"can_eject,omitempty"`
	IsoNetz             *Parameter_IsoNetz        `protobuf:"bytes,11,opt,name=iso_netz,json=isoNetz,proto3" json:"iso_netz,omitempty"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_Parameter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_Parameter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_common_proto_Parameter_proto_rawDescGZIP(), []int{0}
}

func (x *Parameter) GetInternalName() string {
	if x != nil {
		return x.InternalName
	}
	return ""
}

func (x *Parameter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Parameter) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Parameter) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Parameter) GetGoodValueRange() *Parameter_GoodValueRange {
	if x != nil {
		return x.GoodValueRange
	}
	return nil
}

func (x *Parameter) GetMeasurement() *Parameter_Measurement {
	if x != nil {
		return x.Measurement
	}
	return nil
}

func (x *Parameter) GetWithinTolerance() bool {
	if x != nil {
		return x.WithinTolerance
	}
	return false
}

func (x *Parameter) GetWithinWarningLimits() bool {
	if x != nil {
		return x.WithinWarningLimits
	}
	return false
}

func (x *Parameter) GetPixelPerUnit() float64 {
	if x != nil {
		return x.PixelPerUnit
	}
	return 0
}

func (x *Parameter) GetCanEject() bool {
	if x != nil {
		return x.CanEject
	}
	return false
}

func (x *Parameter) GetIsoNetz() *Parameter_IsoNetz {
	if x != nil {
		return x.IsoNetz
	}
	return nil
}

type Parameter_GoodValueRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nominal              float64 `protobuf:"fixed64,1,opt,name=nominal,proto3" json:"nominal,omitempty"`
	PositiveTolerance    float64 `protobuf:"fixed64,2,opt,name=positive_tolerance,json=positiveTolerance,proto3" json:"positive_tolerance,omitempty"`
	NegativeTolerance    float64 `protobuf:"fixed64,3,opt,name=negative_tolerance,json=negativeTolerance,proto3" json:"negative_tolerance,omitempty"`
	PositiveWarningLimit float64 `protobuf:"fixed64,4,opt,name=positive_warning_limit,json=positiveWarningLimit,proto3" json:"positive_warning_limit,omitempty"`
	NegativeWarningLimit float64 `protobuf:"fixed64,5,opt,name=negative_warning_limit,json=negativeWarningLimit,proto3" json:"negative_warning_limit,omitempty"`
}

func (x *Parameter_GoodValueRange) Reset() {
	*x = Parameter_GoodValueRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_Parameter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter_GoodValueRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter_GoodValueRange) ProtoMessage() {}

func (x *Parameter_GoodValueRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_Parameter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter_GoodValueRange.ProtoReflect.Descriptor instead.
func (*Parameter_GoodValueRange) Descriptor() ([]byte, []int) {
	return file_common_proto_Parameter_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Parameter_GoodValueRange) GetNominal() float64 {
	if x != nil {
		return x.Nominal
	}
	return 0
}

func (x *Parameter_GoodValueRange) GetPositiveTolerance() float64 {
	if x != nil {
		return x.PositiveTolerance
	}
	return 0
}

func (x *Parameter_GoodValueRange) GetNegativeTolerance() float64 {
	if x != nil {
		return x.NegativeTolerance
	}
	return 0
}

func (x *Parameter_GoodValueRange) GetPositiveWarningLimit() float64 {
	if x != nil {
		return x.PositiveWarningLimit
	}
	return 0
}

func (x *Parameter_GoodValueRange) GetNegativeWarningLimit() float64 {
	if x != nil {
		return x.NegativeWarningLimit
	}
	return 0
}

type Parameter_Measurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value             float64   `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	AggregationMethod string    `protobuf:"bytes,2,opt,name=aggregation_method,json=aggregationMethod,proto3" json:"aggregation_method,omitempty"`
	SingleValues      []float64 `protobuf:"fixed64,3,rep,packed,name=single_values,json=singleValues,proto3" json:"single_values,omitempty"`
}

func (x *Parameter_Measurement) Reset() {
	*x = Parameter_Measurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_Parameter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter_Measurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter_Measurement) ProtoMessage() {}

func (x *Parameter_Measurement) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_Parameter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter_Measurement.ProtoReflect.Descriptor instead.
func (*Parameter_Measurement) Descriptor() ([]byte, []int) {
	return file_common_proto_Parameter_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Parameter_Measurement) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Parameter_Measurement) GetAggregationMethod() string {
	if x != nil {
		return x.AggregationMethod
	}
	return ""
}

func (x *Parameter_Measurement) GetSingleValues() []float64 {
	if x != nil {
		return x.SingleValues
	}
	return nil
}

type Parameter_IsoNetz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlaschenTyp    int32 `protobuf:"varint,1,opt,name=flaschen_typ,json=flaschenTyp,proto3" json:"flaschen_typ,omitempty"`
	ParameterIndex int32 `protobuf:"varint,2,opt,name=parameter_index,json=parameterIndex,proto3" json:"parameter_index,omitempty"`
}

func (x *Parameter_IsoNetz) Reset() {
	*x = Parameter_IsoNetz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_Parameter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter_IsoNetz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter_IsoNetz) ProtoMessage() {}

func (x *Parameter_IsoNetz) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_Parameter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter_IsoNetz.ProtoReflect.Descriptor instead.
func (*Parameter_IsoNetz) Descriptor() ([]byte, []int) {
	return file_common_proto_Parameter_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Parameter_IsoNetz) GetFlaschenTyp() int32 {
	if x != nil {
		return x.FlaschenTyp
	}
	return 0
}

func (x *Parameter_IsoNetz) GetParameterIndex() int32 {
	if x != nil {
		return x.ParameterIndex
	}
	return 0
}

var File_common_proto_Parameter_proto protoreflect.FileDescriptor

var file_common_proto_Parameter_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xc1, 0x07, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x4a,
	0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x77,
	0x69, 0x74, 0x68, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x54, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x57, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x45, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x34, 0x0a,
	0x08, 0x69, 0x73, 0x6f, 0x5f, 0x6e, 0x65, 0x74, 0x7a, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x2e, 0x49, 0x73, 0x6f, 0x4e, 0x65, 0x74, 0x7a, 0x52, 0x07, 0x69, 0x73, 0x6f, 0x4e,
	0x65, 0x74, 0x7a, 0x1a, 0xf4, 0x01, 0x0a, 0x0e, 0x47, 0x6f, 0x6f, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x2d, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6c, 0x65,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0x77, 0x0a, 0x0b, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x1a, 0x55, 0x0a, 0x07, 0x49, 0x73, 0x6f, 0x4e, 0x65, 0x74, 0x7a, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x73, 0x63, 0x68, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x73, 0x63, 0x68, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x1f, 0x5a, 0x1d, 0x69, 0x73,
	0x6f, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_common_proto_Parameter_proto_rawDescOnce sync.Once
	file_common_proto_Parameter_proto_rawDescData = file_common_proto_Parameter_proto_rawDesc
)

func file_common_proto_Parameter_proto_rawDescGZIP() []byte {
	file_common_proto_Parameter_proto_rawDescOnce.Do(func() {
		file_common_proto_Parameter_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_Parameter_proto_rawDescData)
	})
	return file_common_proto_Parameter_proto_rawDescData
}

var file_common_proto_Parameter_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_proto_Parameter_proto_goTypes = []interface{}{
	(*Parameter)(nil),                // 0: common.Parameter
	(*Parameter_GoodValueRange)(nil), // 1: common.Parameter.GoodValueRange
	(*Parameter_Measurement)(nil),    // 2: common.Parameter.Measurement
	(*Parameter_IsoNetz)(nil),        // 3: common.Parameter.IsoNetz
}
var file_common_proto_Parameter_proto_depIdxs = []int32{
	1, // 0: common.Parameter.good_value_range:type_name -> common.Parameter.GoodValueRange
	2, // 1: common.Parameter.measurement:type_name -> common.Parameter.Measurement
	3, // 2: common.Parameter.iso_netz:type_name -> common.Parameter.IsoNetz
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_common_proto_Parameter_proto_init() }
func file_common_proto_Parameter_proto_init() {
	if File_common_proto_Parameter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_Parameter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_Parameter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter_GoodValueRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_Parameter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter_Measurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_Parameter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter_IsoNetz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_Parameter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_Parameter_proto_goTypes,
		DependencyIndexes: file_common_proto_Parameter_proto_depIdxs,
		MessageInfos:      file_common_proto_Parameter_proto_msgTypes,
	}.Build()
	File_common_proto_Parameter_proto = out.File
	file_common_proto_Parameter_proto_rawDesc = nil
	file_common_proto_Parameter_proto_goTypes = nil
	file_common_proto_Parameter_proto_depIdxs = nil
}
